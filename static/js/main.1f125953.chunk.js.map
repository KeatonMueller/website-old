{"version":3,"sources":["Portrait.JPG","Styles.js","AboutPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Styles","theme","title","flexGrow","gridRoot","aboutRoot","marginTop","spacing","unit","main","width","minWidth","padding","overflow","portrait","maxWidth","maxHeight","gridItem","AboutPage","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","classes","react_default","a","createElement","className","Grid","container","justify","item","xs","align","Typography","variant","Paper","sm","alignItems","src","Portrait","alt","paragraph","React","Component","withStyles","styles","App","_this","state","tab","handleChange","bind","assertThisInitialized","event","newValue","setState","AppBar","position","Toolbar","Tabs","value","onChange","Tab","label","src_AboutPage","Boolean","window","location","hostname","match","createMuiTheme","palette","primary","indigo","secondary","light","blue","background","default","typography","fontFamily","join","ReactDOM","render","MuiThemeProvider","CssBaseline","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uRCAzBC,EAAA,SAACC,GAAD,MACd,CACCC,MAAO,CACNC,SAAU,EAAE,GAEbC,SAAU,CACTD,SAAU,GAEXE,UAAW,CACVC,UAA8B,EAAnBL,EAAMM,QAAQC,MAE1BC,KAAK,CACJC,MAAO,MACPC,SAAU,QACVC,QAA4B,EAAnBX,EAAMM,QAAQC,KACvBK,SAAU,UAEXC,SAAS,CACRC,SAAU,OAEVC,UAAW,SAGZC,SAAU,CACTL,QAASX,EAAMM,QAAQC,QCPpBU,cACF,SAAAA,EAAYC,GAAO,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KACTH,0EAID,IACGO,EAAYJ,KAAKH,MAAjBO,QACR,OACLC,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQrB,WACvBsB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,WAAS,EAACzB,QAAS,EAAG0B,QAAQ,UACnCN,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIH,WAAS,EAACC,QAAQ,SAASG,MAAM,QACnDT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAYC,QAAQ,MAApB,UAIDX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAOT,UAAWJ,EAAQjB,MACzBkB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,WAAS,EAACzB,QAAS,GACxBoB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIK,GAAI,EAAGR,WAAS,EAACC,QAAQ,SAASQ,WAAW,SAASX,UAAWJ,EAAQT,UAC3FU,EAAAC,EAAAC,cAACQ,EAAA,EAAD,wLAIDV,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIK,GAAI,EAAGR,WAAS,EAACC,QAAQ,SAASH,UAAWJ,EAAQT,UACvEU,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQZ,SAAU4B,IAAKC,IAAUC,IAAI,cAEtDjB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIH,WAAS,EAACC,QAAQ,SAASH,UAAWJ,EAAQT,UAChEU,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAYQ,WAAS,GAArB,kNA3BgBC,IAAMC,WAuCfC,cAAWC,EAAXD,CAAmB9B,GCzC5BgC,cACF,SAAAA,EAAY/B,GAAM,IAAAgC,EAAA,OAAA/B,OAAAC,EAAA,EAAAD,CAAAE,KAAA4B,IACdC,EAAA/B,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8B,GAAAzB,KAAAH,KAAMH,KAEDA,MAAQA,EAEbgC,EAAKC,MAAQ,CACTC,IAAK,GAETF,EAAKG,aAAeH,EAAKG,aAAaC,KAAlBnC,OAAAoC,EAAA,EAAApC,CAAA+B,IARNA,4EAWLM,EAAOC,GAChBpC,KAAKqC,SAAS,CAACN,IAAKK,qCAEf,IACGhC,EAAYJ,KAAKH,MAAjBO,QACR,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQtB,UACpBuB,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAQC,SAAS,UACblC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,KACAnC,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAYC,QAAQ,KAAKR,UAAWJ,EAAQxB,OAA5C,kBAGAyB,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMC,MAAO1C,KAAK8B,MAAMC,IAAKY,SAAU3C,KAAKgC,cACxC3B,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAKC,MAAM,UACXxC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAKC,MAAM,gBAIC,IAAnB7C,KAAK8B,MAAMC,IACR1B,EAAAC,EAAAC,cAACuC,EAAc9C,KAAKH,OACpB,KAEgB,IAAnBG,KAAK8B,MAAMC,IACR1B,EAAAC,EAAAC,cAACQ,EAAA,EAAD,kBACA,aApCFS,IAAMC,WA2CTC,cAAWC,EAAXD,CAAmBE,GC9CdmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uGCTAxE,EAAQyE,YAAe,CAC5BC,QAAS,CACRC,QAAS,CACRnE,KAAMoE,IAAO,MAEdC,UAAW,CACVC,MAAOC,IAAK,IACZvE,KAAMuE,IAAK,MAEZC,WAAY,CACXC,QAASF,IAAK,MAGhBG,WAAY,CACXC,WAAY,CACX,gBACA,aACA,SACA,gBACA,aACA,qBACA,mBACA,SACEC,KAAK,QAKVC,IAASC,OACP5D,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAkBvF,MAAOA,GACzB0B,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,MACA9D,EAAAC,EAAAC,cAAC6D,EAAD,OAEEC,SAASC,eAAe,SDuFtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1f125953.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Portrait.8c67c40b.JPG\";","export default (theme) => (\n\t{\n\t\ttitle: {\n\t\t\tflexGrow: 1/3\n\t\t},\n\t\tgridRoot: {\n\t\t\tflexGrow: 1\n\t\t},\n\t\taboutRoot: {\n\t\t\tmarginTop: theme.spacing.unit*3\n\t\t},\n\t\tmain:{\n\t\t\twidth: '50%',\n\t\t\tminWidth: '256px',\n\t\t\tpadding: theme.spacing.unit*3,\n\t\t\toverflow: 'hidden'\n\t\t},\n\t\tportrait:{\n\t\t\tmaxWidth: '100%',\n\t\t\t// height: 'auto'\n\t\t\tmaxHeight: '256px',\n\t\t\t// width: 'auto'\n\t\t},\n\t\tgridItem: {\n\t\t\tpadding: theme.spacing.unit\n\t\t}\n\t}\n)\n","import React from 'react'\nimport { withStyles } from '@material-ui/styles'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton'\nimport Paper from '@material-ui/core/Paper'\nimport Tab from '@material-ui/core/Tab'\nimport Tabs from '@material-ui/core/Tabs'\nimport Typography from '@material-ui/core/Typography'\n\nimport Portrait from './Portrait.JPG'\n\n\nimport styles from './Styles'\n\nclass AboutPage extends React.Component {\n    constructor(props){\n        super(props)\n\n    }\n\n    render() {\n        const { classes } = this.props;\n        return(\n\t\t\t<div className={classes.aboutRoot}>\n\t\t\t\t<Grid container spacing={8} justify='center'>\n\t\t\t\t\t<Grid item xs={12} container justify='center' align='left'>\n\t\t\t\t\t\t<Typography variant='h5'>\n\t\t\t\t\t\t\tAbout\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Paper className={classes.main} >\n\t\t\t\t\t\t<Grid container spacing={0}>\n\t\t\t\t\t\t\t<Grid item xs={12} sm={6} container justify='center' alignItems='center' className={classes.gridItem}>\n\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\tMy name's Keaton Mueller, and I'm a Computer Science major at Yale University. I'm currently in my third year, and I plan on receiving a B.S. in Computer Science in May 2021.\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12} sm={6} container justify='center' className={classes.gridItem}>\n\t\t\t\t\t\t\t\t<img className={classes.portrait} src={Portrait} alt='Portrait' />\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={12} container justify='center' className={classes.gridItem}>\n\t\t\t\t\t\t\t\t<Typography paragraph>\n\t\t\t\t\t\t\t\t\tI'm currently looking for a technical internship for the Summer of 2020. My passions include software engineering, machine learning, natural language processing, and just programming in general.\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\t\t\t</div>\n        )\n    }\n}\n\nexport default withStyles(styles)(AboutPage)\n","import React from 'react'\nimport { withStyles } from '@material-ui/styles'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Grid from '@material-ui/core/Grid'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tab from '@material-ui/core/Tab'\nimport Tabs from '@material-ui/core/Tabs'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n\nimport AboutPage from './AboutPage'\n\nimport styles from './Styles'\n\nclass App extends React.Component {\n    constructor(props){\n        super(props)\n\n        this.props = props\n\n        this.state = {\n            tab: 0\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(event, newValue){\n        this.setState({tab: newValue})\n    }\n    render() {\n        const { classes } = this.props;\n        return(\n            <div className={classes.gridRoot}>\n                <AppBar position=\"static\">\n                    <Toolbar>\n                    <Typography variant='h5' className={classes.title}>\n                        Keaton Mueller\n                    </Typography>\n                    <Tabs value={this.state.tab} onChange={this.handleChange}>\n                        <Tab label='About' />\n                        <Tab label='Projects' />\n                    </Tabs>\n                    </Toolbar>\n                </AppBar>\n                {this.state.tab === 0 ?\n                    <AboutPage {...this.props} /> :\n                    null\n                }\n                {this.state.tab === 1 ?\n                    <Typography>Minecraft</Typography> :\n                    null\n                }\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core'\nimport { indigo, blue } from '@material-ui/core/colors'\n\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: indigo[900]\n\t\t},\n\t\tsecondary: {\n\t\t\tlight: blue[50],\n\t\t\tmain: blue[100]\n\t\t},\n\t\tbackground: {\n\t\t\tdefault: blue[50]\n\t\t}\n\t},\n\ttypography: {\n\t\tfontFamily: [\n\t\t\t'\"Avenir Next\"',\n\t\t\t'\"Segoe UI\"',\n\t\t\t'Roboto',\n\t\t\t'-apple-system',\n\t\t\t'sans-serif',\n\t\t\t'BlinkMacSystemFont',\n\t\t\t'\"Helvetica Neue\"',\n\t\t\t'Arial',\n\t\t\t].join(',')\n\t\t}\n})\n\n\nReactDOM.render(\n\t(<MuiThemeProvider theme={theme}>\n\t\t<CssBaseline />\n\t\t<App />\n\t</MuiThemeProvider>\n\t), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}